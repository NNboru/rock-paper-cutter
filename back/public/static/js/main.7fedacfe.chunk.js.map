{"version":3,"sources":["components/Header.js","components/Hand.js","components/Allhands.js","components/Loader.js","components/Home.js","components/Popup.js","components/Footer.js","components/Offcanvas.js","components/Main.js","components/LoadMain.js","components/Auth.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","React","Component","Hand","this","props","angle","count","name","stat","color","h","Number","parseInt","bias","Math","abs","trans","window","innerWidth","innerHeight","sty","height","choice","style","transform","position","top","left","src","alt","wins","Allhands","p","players","reveal","ind","hands","deg","player","status","res","winners","includes","push","Loader","animationDelay","Home","update","e","cur","target","val","value","replaceAll","substr","classList","remove","stop","state","loading","min","max","floor","random","String","fromCharCode","rand","total","cnt","win","inc","length","a","txts","names","elem","document","getElementById","txt","s","Set","size","add","Array","from","forEach","copy","JSON","parse","stringify","setState","dlay","innerHTML","map","v","join","Promise","setTimeout","calResult","id","href","htmlFor","type","autoComplete","spellCheck","required","createAni","cname","cpass","jname","jpass","genName","addEventListener","preventDefault","pass","fetch","method","headers","body","then","ok","Error","json","data","error","exists","history","catch","alert","notExists","wrongPass","hidearrow","setInterval","arrow","getBoundingClientRect","y","clearInterval","withRouter","Popup","setName","refinp","current","myModal","createRef","ref","onInput","placeholder","onsubmit","Modal","backdrop","keyboard","show","focus","Footer","onClick","play","Offcanvas","resetRoom","socket","emit","getCookie","matches","cookie","match","RegExp","replace","decodeURIComponent","undefined","shareRoom","url","location","origin","roomName","navigator","share","clipboard","writeText","title","text","tabIndex","to","data-bs-dismiss","inpchat","divchatbox","spanMsgCnt","offcan","querySelector","trim","on","insertAdjacentHTML","contains","innerText","room","Main","hide","roomid","ac","console","log","notify","msg","clone","data-bs-toggle","data-bs-target","LoadMain","getRoom","io","Image","img","close","Auth","setCookie","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","params","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gPAceA,E,4JAVb,WACE,OACI,wBAAQC,UAAU,4CAAlB,mC,GAJaC,IAAMC,W,iCCyCZC,E,4JAvCb,WACI,MAAoCC,KAAKC,MAAlCC,EAAP,EAAOA,MAAMC,EAAb,EAAaA,MAAMC,EAAnB,EAAmBA,KAAKC,EAAxB,EAAwBA,KAAKC,EAA7B,EAA6BA,MACzBC,EAAIC,OAAOC,SAAS,GAAG,IAAIN,GACzBO,EAA8B,IAAvBC,KAAKC,IAAI,GAAGV,EAAM,KAEzBW,EAAUC,OAAOC,WAAWD,OAAOE,YAAiB,GAAGN,EAAN,EAAY,KAAO,EAAEA,EAAK,KAC3EO,EAAM,CAACC,OAAOX,EAAE,MAIxB,OAHOF,EAAKc,QAAQ,IAChBF,EAAG,UAAc,6CAGjB,sBAAKrB,UAAU,OAAOwB,MAAO,CACrBC,UAAU,WAAD,OAAanB,EAAb,uCAAiDW,EAAjD,MACTS,SAAS,WACTC,IAAI,eAAD,OAAgB,GAAKhB,EAAE,EAAE,KAAzB,KACHiB,KAAK,eAAD,OAAgBjB,EAAE,EAAE,KAApB,MAJZ,UAMI,8BAEQ,qBAAKkB,IAAMpB,EAAKc,QAAQ,EAAd,eAfT,CAAC,QAAS,QAAS,WAeuBd,EAAKc,QAAtC,QACkB,iBACvBC,MAAOH,EACPrB,UAAWU,EACXoB,IAAI,OAIjB,qBAAK9B,UAAU,OAAf,SACI,gCACI,+BAAOQ,IACP,sBAAMR,UAAU,+BAAhB,SAAgDS,EAAKsB,mB,GAhCtD9B,IAAMC,WC8BV8B,E,4JA3Bb,WACE,MAAkC5B,KAAKC,MAAhCE,EAAP,EAAOA,MAAc0B,EAArB,EAAaC,QAAWC,EAAxB,EAAwBA,OACpBC,EAAI,EAAGC,EAAM,GAAIC,EAAI,EAIzB,IAAI,IAAIC,KAHLrB,OAAOC,WAAWD,OAAOE,cAC1BkB,EAAI,IAEYL,EAChB,GAAsB,OAAnBA,EAAEM,GAAQC,OAAc,CACzB,IAAI9B,EAAM,cACPyB,IACuBzB,EAAR,SAAbyB,EAAOM,IAAoB,QACtBN,EAAOO,QAAQC,SAASJ,GAAe,YACpC,aAEbF,EAAMO,KAAM,cAAC,EAAD,CAAMpC,KAAM+B,EACN9B,KAAMwB,EAAEM,GAERjC,MAAOgC,EAAIF,GAAK,IAAI7B,GACpBA,MAAOA,EACPG,MAAOA,GAHF0B,MAO3B,OAAOC,M,GAzBYpC,IAAMC,WCed2C,E,4JAfX,WACI,OACI,qBAAK7C,UAAU,wDAAf,SACI,qBAAKA,UAAU,qEAAf,SACI,gCACI,qBAAKA,UAAU,6BACf,qBAAKA,UAAU,2BAA2BwB,MAAO,CAACsB,eAAe,SACjE,qBAAK9C,UAAU,2BAA2BwB,MAAO,CAACsB,eAAe,oB,GARpE7C,IAAMC,WCGrB6C,E,kDACF,aAAe,IAAD,8BACV,gBA8DJC,OAAS,SAAAC,GACL,IAAIC,EAAID,EAAEE,OAAQC,EAAMF,EAAIG,MAC5BD,EAAMA,EAAIE,WAAW,WAAW,IAAIC,OAAO,EAAE,IAC7CL,EAAIG,MAAQD,EACZF,EAAIM,UAAUC,OAAO,eAjErB,EAAKC,MAAK,EACV,EAAKC,MAAQ,CACTC,SAAQ,EACRrD,MAAM,EACN4B,QAAO,EACPD,QAAQ,CACJ,MAAQ,CACJM,OAAO,KACPjB,OAAO,GAEX,QAAU,CAACiB,OAAO,MAClB,QAAU,CAACA,OAAO,QAbhB,E,wCAkBd,SAAKqB,EAAKC,GACN,OAAOD,EAAM9C,KAAKgD,MAAMhD,KAAKiD,UAAUF,EAAID,EAAI,M,qBAGnD,WACI,OAAOI,OAAOC,aACV9D,KAAK+D,KAAK,GAAG,KACb,CAAC,GAAG,IAAI,IAAI,IAAI,KAAK/D,KAAK+D,KAAK,EAAE,IACjC/D,KAAK+D,KAAK,GAAG,KACb,CAAC,GAAG,IAAI,IAAI,IAAI,KAAK/D,KAAK+D,KAAK,EAAE,KACjC/D,KAAK+D,KAAK,EAAE,M,uBAGpB,SAAUjC,EAASkC,GACf,IAAMC,EAAM,CAAC,EAAE,EAAE,GAAI5B,EAAM,GAC3B,IAAK,IAAIR,KAAKC,EACa,OAApBA,EAAQD,GAAGO,QACV6B,EAAInC,EAAQD,GAAGV,UAGvB,GAAG8C,EAAI,GAAGA,EAAI,GAAGA,EAAI,KAAO,GAAKA,EAAI1B,SAASyB,GAE1C,OADA3B,EAAIA,IAAI,OACDA,EAENA,EAAIA,IAAI,MAEb,IAAI6B,EAAI,EAKR,IAAK,IAAIrC,KAJG,IAAToC,EAAI,KAAQC,EAAI,GACP,IAATD,EAAI,KAAQC,EAAI,GAEnB7B,EAAIC,QAAU,GACAR,EACa,OAApBA,EAAQD,GAAGO,QACPN,EAAQD,GAAGV,SAAS+C,GACnB7B,EAAIC,QAAQE,KAAKX,GAG7B,IAxBqB,EAwBfsC,EAAMH,EAAQ3B,EAAIC,QAAQ8B,OAxBX,cAyBR/B,EAAIC,SAzBI,IAyBrB,IAAI,EAAJ,qBAAyB,CACrBR,EADqB,SACVH,MAAQwC,GA1BF,8BA6BrB,OAAO9B,I,8DAUX,+CAAAgC,EAAA,sDACUC,EAAO,CACT,0BACA,uBACA,yBACA,uBACA,uBACA,oBACA,+BACDC,EAAQ,CACP,MAAO,QAAS,QAAS,SAAU,SAAU,OAC7C,SAAU,OAAQ,QAAS,QAAS,WAAY,OAAQ,SACxD,SAAU,SAAU,OAAQ,SAAU,QAAS,UAC/C,SAAU,WAAY,UAAW,YAAa,WAG5CC,EAAOC,SAASC,eAAe,UAhBzC,uBAkBuBJ,GAlBvB,aAAAD,EAAA,gDAAAA,EAAA,sDAsBY,IAJIM,EAlBhB,QAqBkBxE,EAAQ,EAAK4D,KAAK,EAAE,GAAIa,EAAE,IAAIC,IAAO/C,EAAQ,GAC7C8C,EAAEE,OAAO3E,GACXyE,EAAEG,IAAI,EAAKhB,KAAK,EAAEQ,EAAMH,OAAO,IAvB/C,OAyBYY,MAAMC,KAAKL,GAAGM,SAAQ,SAAAlD,GAClBF,EAAQyC,EAAMvC,IAAM,CAChBI,OAAO,SAGX+C,EAAOC,KAAKC,MAAMD,KAAKE,UAAUxD,IACrC,EAAKyD,SAAU,CAAEpF,QAAO2B,QAAQqD,EAAMpD,QAAO,IAGzCyD,EAAO,EACXhB,EAAKiB,UAAWT,MAAMC,KAAKN,GAAKe,KAAI,SAAAC,GAChC,MAAO,MAAJA,EACO,gCAAN,OAAwCH,IAAQ,GAAhD,0BACE,gCAAN,OAAwCA,IAAQ,GAAhD,cAAwDG,EAAxD,cACDC,KAAK,IAvCpB,UA0CkB,IAAIC,SAAQ,SAAAxD,GAAG,OAAEyD,WAAWzD,EAAI,IAAK,SA1CvD,YA2Ce,EAAKiB,KA3CpB,8DA8CY,IAAQzB,KAAKC,EACTA,EAAQD,GAAGV,OAAS,EAAK4C,KAAK,EAAE,GA/ChD,OAiDkBhC,EAAS,EAAKgE,UAAUjE,EAAS3B,GACvCgF,EAAOC,KAAKC,MAAMD,KAAKE,UAAUxD,IACjC,EAAKyD,SAAU,CAAExD,SAAQD,QAAQqD,IAnD7C,UAsDkB,IAAIU,SAAQ,SAAAxD,GAAG,OAAEyD,WAAWzD,EAAI,IAAK,SAtDvD,YAuDe,EAAKiB,KAvDpB,8DAwDY,EAAKiC,SAAU,CAAEpF,MAAM,EAAG2B,QAAQ,GAAIC,QAAO,IAxDzD,+a,0EA6DA,WACI,OACI,qCACI,qBAAKnC,UAAU,cAAf,SACI,qBAAKA,UAAU,GAAf,SACI,qBAAKA,UAAU,uDAAf,SACI,qBAAKA,UAAU,qCAAqCoG,GAAG,iBAKnE,qBAAKpG,UAAU,kBAAf,SACI,cAAC,EAAD,CAAUkC,QAAS9B,KAAKuD,MAAMzB,QACtB3B,MAASH,KAAKuD,MAAMpD,MACpB4B,OAAS/B,KAAKuD,MAAMxB,WAIhC,mBAAGkE,KAAK,WAAWrG,UAAU,4DAA7B,SACI,qBAAK6B,IAAI,gBAAgBuE,GAAG,aAAatE,IAAI,OAGjD,sBAAK9B,UAAU,oDAAf,UACI,uBACA,sBAAKA,UAAU,WAAf,UACI,uBAAMoG,GAAG,UAAUpG,UAAU,+CAA7B,UACI,qBAAKA,UAAU,sBAAf,yBACA,sBAAKA,UAAU,aAAf,UACI,uBAAOsG,QAAQ,QAAf,uBACA,uBAAOC,KAAK,OAAOvG,UAAU,+CAA+CoG,GAAG,QAAQI,aAAa,MAAMC,WAAW,QAAQC,SAAS,aACtI,qBAAK1G,UAAU,mBAAf,2DAEJ,uBACA,sBAAKA,UAAU,aAAf,UACI,uBAAOsG,QAAQ,QAAf,sBACA,uBAAOC,KAAK,OAAOvG,UAAU,+CAA+CoG,GAAG,QAAQI,aAAa,MAAMC,WAAW,QAAQC,SAAS,gBAE1I,uBACA,qBAAK1G,UAAU,YAAf,SACI,wBAAQuG,KAAK,SAASvG,UAAU,iCAAhC,0BAIR,uBAAMoG,GAAG,UAAUpG,UAAU,+CAA7B,UACI,qBAAKA,UAAU,sBAAf,uBACA,sBAAKA,UAAU,aAAf,UACI,uBAAOsG,QAAQ,QAAf,uBACA,uBAAOC,KAAK,OAAOvG,UAAU,+CAA+CoG,GAAG,QAAQI,aAAa,MAAMC,WAAW,QAAQC,SAAS,aACtI,qBAAK1G,UAAU,mBAAf,qDAEJ,uBACA,sBAAKA,UAAU,aAAf,UACI,uBAAOsG,QAAQ,QAAf,sBACA,uBAAOC,KAAK,OAAOvG,UAAU,+CAA+CoG,GAAG,QAAQI,aAAa,MAAMC,WAAW,QAAQC,SAAS,aACtI,qBAAK1G,UAAU,mBAAf,mCAEJ,uBACA,qBAAKA,UAAU,YAAf,SACI,wBAAQuG,KAAK,SAASvG,UAAU,iCAAhC,gCAKhB,uBACA,qBAAKA,UAAU,mBAAf,+BAIEI,KAAKuD,MAAMC,SAAW,cAAC,EAAD,S,+BAKpC,WAAqB,IAAD,OAChBxD,KAAKuG,YAEL,IAAMC,EAAQ/B,SAASC,eAAe,SAChC+B,EAAQhC,SAASC,eAAe,SAChCgC,EAAQjC,SAASC,eAAe,SAChCiC,EAAQlC,SAASC,eAAe,SAEtC8B,EAAMvD,MAAQjD,KAAK4G,UACnBH,EAAMxD,MAAQjD,KAAK+D,KAAK,IAAI,KAE5ByC,EAAMK,iBAAiB,QAAS7G,KAAK4C,QACrC8D,EAAMG,iBAAiB,QAAS7G,KAAK4C,QACrC+D,EAAME,iBAAiB,SAAS,kBAAIF,EAAMvD,UAAUC,OAAO,iBAE3DoB,SAASC,eAAe,WAAWmC,iBAAiB,UAAU,SAAAhE,GAC1DA,EAAEiE,iBACF,EAAKvB,SAAS,CAAC/B,SAAQ,IACvB,IAAMpD,EAAKoG,EAAMvD,MAAO8D,EAAKN,EAAMxD,MACnC+D,MAAM,cAAe,CACjBC,OAAO,OACPC,QAAQ,CAAC,eAAgB,oBACzBC,KAAK/B,KAAKE,UAAU,CAAClF,OAAM2G,WAC5BK,MAAK,SAAA/E,GACJ,IAAIA,EAAIgF,GAAI,MAAM,IAAIC,MAAM,sBAC5B,OAAOjF,EAAIkF,UACZH,MAAK,SAAAI,GACJ,GAAGA,EAAKC,MAAO,MAAM,IAAIH,MAAM,mBAAqBE,EAAKC,OACtDD,EAAKE,QACJlB,EAAMpD,UAAU2B,IAAI,cACpB,EAAKQ,SAAS,CAAC/B,SAAQ,KAKvB,EAAKvD,MAAM0H,QAAQnF,KAAnB,gBAAiCpC,EAAjC,YAAyC2G,OAE9Ca,OAAM,SAAA/E,GACL,EAAK0C,SAAS,CAAC/B,SAAQ,IACvBqE,MAAMhF,SAId4B,SAASC,eAAe,WAAWmC,iBAAiB,UAAU,SAAAhE,GAC1DA,EAAEiE,iBACF,EAAKvB,SAAS,CAAC/B,SAAQ,IACvB,IAAMpD,EAAKsG,EAAMzD,MAAO8D,EAAKJ,EAAM1D,MACnC+D,MAAM,YAAa,CACfC,OAAO,OACPC,QAAQ,CAAC,eAAgB,oBACzBC,KAAK/B,KAAKE,UAAU,CAAClF,OAAM2G,WAC5BK,MAAK,SAAA/E,GACJ,IAAIA,EAAIgF,GAAI,MAAM,IAAIC,MAAM,sBAC5B,OAAOjF,EAAIkF,UACZH,MAAK,SAAAI,GACJ,GAAGA,EAAKC,MAAO,MAAM,IAAIH,MAAM,mBAAqBE,EAAKC,OACtDD,EAAKM,WACJpB,EAAMtD,UAAU2B,IAAI,cACpB,EAAKQ,SAAS,CAAC/B,SAAQ,KAEnBgE,EAAKO,WACTpB,EAAMvD,UAAU2B,IAAI,cACpB,EAAKQ,SAAS,CAAC/B,SAAQ,KAKvB,EAAKvD,MAAM0H,QAAQnF,KAAnB,gBAAiCpC,EAAjC,YAAyC2G,OAE9Ca,OAAM,SAAA/E,GACL,EAAK0C,SAAS,CAAC/B,SAAQ,IACvBqE,MAAMhF,SAId7C,KAAKgI,UAAYC,aAAY,WACzB,IAAMC,EAAQzD,SAASC,eAAe,cACnCwD,EAAMC,wBAAwBC,EAAE,IAC/BF,EAAM9G,MAAM,kBAAkB,OAG9B8G,EAAM9G,MAAM,kBAAkB,YAEnC,O,kCAGP,WACIpB,KAAKsD,MAAK,EACV+E,cAAcrI,KAAKgI,e,GArSRnI,IAAMC,WAySVwI,cAAW3F,G,eCjPX4F,E,kDAzDX,WAAYtI,GAAO,IAAD,8BACd,cAAMA,IAIVuI,QAAU,SAAA3F,GACNA,EAAEiE,iBACF,IAAM9D,EAAM,EAAKyF,OAAOC,QAAQzF,MACY,UAAzC,EAAKhD,MAAMuI,QAAQxF,EAAI,EAAK2F,UAC3B,EAAKF,OAAOC,QAAQtF,UAAU2B,IAAI,eATxB,EAalBnC,OAAS,SAAAC,GACL,IAAIC,EAAI,EAAK2F,OAAOC,QAAS1F,EAAMF,EAAIG,MACvCD,EAAMA,EAAIE,WAAW,WAAW,IAAIC,OAAO,EAAE,IAC7CL,EAAIG,MAAQD,EACZF,EAAIM,UAAUC,OAAO,eAfrB,EAAKoF,OAASG,sBAFA,E,0CAoBlB,WACA,OACI,qBAAKhJ,UAAU,QAAQoG,GAAG,UAA1B,SACI,qBAAKpG,UAAU,qCAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAU,yCAAf,+BAEJ,uBAAMA,UAAU,iDAAiDoG,GAAG,WAApE,UACI,uBACA,uBAAQG,KAAK,OACLvG,UAAU,4CACViJ,IAAK7I,KAAKyI,OACVK,QAAS9I,KAAK4C,OACdyD,WAAW,QACX0C,YAAY,OACZzC,UAAQ,IAEhB,qBAAK1G,UAAU,mBAAf,mDACA,wBAAQA,UAAU,yBAAlB,gBACA,mC,+BAQpB,WACgB6E,SAASC,eAAe,YAChCsE,SAAShJ,KAAKwI,QAClBxI,KAAK2I,QAAU,IAAIM,IAAMxE,SAASC,eAAe,WAAW,CAACwE,SAAS,SAASC,UAAS,IACxFnJ,KAAK2I,QAAQS,OACbpJ,KAAKyI,OAAOC,QAAQW,Y,GAtDRxJ,IAAMC,WCiBXwJ,E,4JAhBX,WAAU,IAAD,OACL,OACI,qBAAK1J,UAAU,6CAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKoG,GAAG,YAAYpG,UAAU,aAA9B,UACI,wBAAQA,UAAU,oDAAoD2J,QAAS,SAAA1G,GAAC,OAAE,EAAK5C,MAAMuJ,KAAK,IAAlG,mBACA,wBAAQ5J,UAAU,oDAAoD2J,QAAS,SAAA1G,GAAC,OAAE,EAAK5C,MAAMuJ,KAAK,IAAlG,mBACA,wBAAQ5J,UAAU,oDAAoD2J,QAAS,SAAA1G,GAAC,OAAE,EAAK5C,MAAMuJ,KAAK,IAAlG,gC,GATH3J,IAAMC,WCsIZ2J,E,4MAnIbC,UAAY,WACV,EAAKzJ,MAAM0J,OAAOC,KAAK,aAAc,K,EAGvCC,UAAY,SAAAzJ,GACV,IAAI0J,EAAUrF,SAASsF,OAAOC,MAAM,IAAIC,OACtC,WAAa7J,EAAK8J,QAAQ,yBAA0B,QAAU,aAEhE,OAAOJ,EAAUK,mBAAmBL,EAAQ,SAAMM,G,EAGpDC,UAAY,WACV,IAAMC,EAAMxJ,OAAOyJ,SAASC,OAAO,SAAS,EAAKvK,MAAMwK,SAAS,IAAI,EAAKZ,UAAU,QAC/Ea,UAAUC,MAOZD,UAAUE,UAAUC,UAAUP,GAC7BlD,KAAKS,MAAM,+CACXD,OAAM,SAAA/E,GAAC,OAAEgF,MAAM,kHAAD,OAGPyC,OAXRI,UAAUC,MAAM,CACdG,MAAM,2BACNC,KAAK,iEACLT,S,4CAYN,WACE,OACI,mCACI,sBAAK1K,UAAU,4BAA4BoL,SAAS,KAAKhF,GAAG,eAA5D,UACI,sBAAKpG,UAAU,mBAAf,UACI,eAAC,IAAD,CAAMqL,GAAG,IAAIrL,UAAU,2CAA2CoG,GAAG,cAArE,UACI,qBAAKpG,UAAU,8BAA8B6B,IAAI,gBAAgBC,IAAI,SACrE,sBAAM9B,UAAU,2CAAhB,qBAEJ,wBAAQuG,KAAK,SAASvG,UAAU,6BAA6BsL,kBAAgB,iBAGjF,qBAAKtL,UAAU,iCAAf,SACE,sBAAKA,UAAU,YAAf,UAEE,sBAAKA,UAAU,wBAAf,UACE,wBAAQuG,KAAK,SAASoD,QAASvJ,KAAK0J,UAAW9J,UAAU,+BAAzD,yBAGA,wBAAQuG,KAAK,SAASoD,QAASvJ,KAAKqK,UAAWzK,UAAU,gCAAzD,uBAMF,qBAAKA,UAAU,oCAAoCoG,GAAG,aAAtD,SACE,gCACE,qBAAKpG,UAAU,OAAf,kBACA,qBAAKA,UAAU,MAAf,uCASJ,uBAAMA,UAAU,qBAAqBoG,GAAG,UAAxC,UACE,uBAAOG,KAAK,OAAOvG,UAAU,eAAeoG,GAAG,UAAUI,aAAa,MAAMC,WAAW,QAAQC,SAAS,aACxG,wBAAQ1G,UAAU,0BAAlB,iC,+BAWpB,WAAqB,IAAD,OACZuL,EAAU1G,SAASC,eAAe,WAClC0G,EAAa3G,SAASC,eAAe,cACrC2G,EAAa5G,SAASC,eAAe,cACrC4G,EAAS7G,SAAS8G,cAAc,cAGtC9G,SAASC,eAAe,WAAWmC,iBAAiB,UAAU,SAAAhE,GAC5DA,EAAEiE,iBACF,IAAM9D,EAAMmI,EAAQlI,MAAMuI,OACvBxI,IACD,EAAK/C,MAAM0J,OAAOC,KAAK,WAAY5G,GACnCmI,EAAQlI,MAAM,OAKlBjD,KAAKC,MAAM0J,OAAO8B,GAAG,YAAY,SAACrL,EAAK4C,GACrCoI,EAAWM,mBAAmB,aAA9B,4DAG2BtL,EAH3B,gDAIyB4C,EAJzB,uCAUIsI,EAAOlI,UAAUuI,SAAS,UAC5BN,EAAWO,WAAaP,EAAWO,UAAY,MAKnDN,EAAOzE,iBAAiB,sBAAsB,WAC5CwE,EAAWO,UAAY,GACvBT,EAAQ9B,WAIVrJ,KAAKC,MAAM0J,OAAO8B,GAAG,cAAc,SAACrL,EAAMyL,GACxCT,EAAWM,mBAAmB,aAA9B,4DAG2BtL,EAH3B,4D,GA1HkBP,IAAMC,WC+HfgM,E,kDA3Hb,WAAY7L,GAAO,IAAD,8BAChB,cAAMA,IAQRuI,QAAU,SAACpI,EAAKuI,GACd,GAAU,KAAPvI,EAAH,CACA,GAAG,EAAKmD,MAAMzB,QAAQ1B,IAA2C,OAAlC,EAAKmD,MAAMzB,QAAQ1B,GAAMgC,OACtD,MAAO,QAETuG,EAAQoD,OACR,EAAKpC,OAAOC,KAAK,WAAY,EAAK3J,MAAM+L,OAAQ5L,GAAM,SAAA6L,GAC5C,OAALA,EACD,EAAK1G,SAAS,CAACnF,SAEZ8L,QAAQC,IAAI,SAAU,6BAnBb,EAwBlBC,OAAS,SAAAC,GACPxE,MAAMwE,IAzBU,EA4BlB7C,KAAO,SAAA7D,GAEL,EAAKgE,OAAOC,KAAK,YAAajE,GAE9B,EAAKJ,UAAS,SAAAX,GACZ,IAAM0H,EAAQlH,KAAKC,MAAMD,KAAKE,UAAUV,EAAE9C,UAE1C,OADAwK,EAAM1H,EAAExE,MAAMe,OAASwE,EAChB,CACL7D,QAASwK,OAlCb,EAAK/I,MAAL,2BACK,EAAKtD,MAAM4L,MADhB,IAEEzL,KAAK,KAEP,EAAK2B,QAAO,EANI,E,0CAyClB,WACE,MAAqB,KAAlB/B,KAAKuD,MAAMnD,KAEV,mCACE,cAAC,EAAD,CAAOoI,QAASxI,KAAKwI,YAKzB,qCACE,yBAAQ5I,UAAU,4EAA4EuG,KAAK,SAASoG,iBAAe,YAAYC,iBAAe,gBAAtJ,UACE,uCACA,sBAAMxG,GAAG,kBAGX,cAAC,EAAD,CAAUlE,QAAS9B,KAAKuD,MAAMzB,QACpB3B,MAASH,KAAKuD,MAAMpD,MACpB4B,OAAS/B,KAAK+B,SAEtB/B,KAAKuD,MAAMzB,QAAQ9B,KAAKuD,MAAMnD,MAAMe,QAAQ,GAAM,cAAC,EAAD,CAAQqI,KAAMxJ,KAAKwJ,OAEvE,cAAC,EAAD,CAAWiB,SAAUzK,KAAKuD,MAAMnD,KAAMuJ,OAAQ3J,KAAKC,MAAM0J,c,+BAK/D,WAAoB,IAAD,OACjB3J,KAAK2J,OAAS3J,KAAKC,MAAM0J,OAGzB3J,KAAK2J,OAAO8B,GAAG,aAAa,SAACrL,EAAM6C,GACjC,EAAKsC,UAAS,SAAAX,GACZ,IAAM9C,EAAUsD,KAAKC,MAAMD,KAAKE,UAAUV,EAAE9C,UAE5C,OADAA,EAAQ1B,GAAMe,OAAS8B,EAChB,CAACnB,iBASZ9B,KAAK2J,OAAO8B,GAAG,YAAY,SAACI,GAC1BA,EAAKzL,KAAK,EAAKmD,MAAMnD,KACrB,EAAKmF,SAASsG,MAIhB7L,KAAK2J,OAAO8B,GAAG,eAAe,SAACI,GAC7BA,EAAKzL,KAAK,EAAKmD,MAAMnD,KACrB,EAAKmF,SAASsG,MAIhB7L,KAAK2J,OAAO8B,GAAG,eAAe,SAACpJ,EAAKwJ,GAClCA,EAAKzL,KAAK,EAAKmD,MAAMnD,KACrB,EAAK2B,OAAOM,EACZ,EAAKkD,SAASsG,GAGd/F,YAAW,WACT,EAAK/D,QAAO,EACZ,EAAKwD,UAAS,SAAAX,GACZ,IAAM9C,EAAUsD,KAAKC,MAAMD,KAAKE,UAAUV,EAAE9C,UAC5C,IAAI,IAAID,KAAKC,SACJA,EAAQD,GAAGV,OAEpB,MAAO,CAACW,gBAET,QAIL9B,KAAKC,MAAM0J,OAAO8B,GAAG,cAAc,SAACrL,EAAMyL,GACxCA,EAAKzL,KAAK,EAAKmD,MAAMnD,KACrB,EAAKmF,SAASsG,U,GAtHDhM,IAAMC,W,QC2CV2M,E,kDA3Cb,WAAYxM,GAAQ,IAAD,8BACjB,cAAMA,IAMRyM,QAAU,WACR,EAAK/C,OAASgD,eACd,EAAKhD,OAAOC,KAAK,WAAY,EAAK3J,MAAM+L,QAAQ,SAAAH,GAC9C,EAAKA,KAAOA,EACZ,EAAKtG,SAAS,CAAC/B,SAAQ,QATzB,EAAKD,MAAM,CACTC,SAAS,GAHM,E,0CAenB,WACE,OACIxD,KAAKuD,MAAMC,QACP,cAAC,EAAD,IACA,cAAC,EAAD,CAAMmG,OAAQ3J,KAAK2J,OACbkC,KAAM7L,KAAK6L,KACXG,OAAQhM,KAAKC,MAAM+L,W,+BAKnC,YAEE,IAAIY,OAAQnL,IAAM,iBAClB,IAAImL,OAAQnL,IAAM,kBAClB,IAAImL,OAAQnL,IAAM,iBAClB,IAAMoL,EAAM,IAAID,MAGhBC,EAAIhG,iBAAiB,OAAQ7G,KAAK0M,SAClCG,EAAIpL,IAAM,qB,kCAGZ,WACIzB,KAAK2J,OAAOmD,Y,GAxCKjN,IAAMC,WCAvBiN,E,kDACF,aAAe,IAAD,8BACV,gBAMJlD,UAAY,SAAAzJ,GACR,IAAI0J,EAAUrF,SAASsF,OAAOC,MAAM,IAAIC,OACtC,WAAa7J,EAAK8J,QAAQ,yBAA0B,QAAU,aAEhE,OAAOJ,EAAUK,mBAAmBL,EAAQ,SAAMM,GAXxC,EAcd4C,UAAY,SAAC5M,EAAM6C,GAAwB,IAAjBgK,EAAgB,uDAAN,IAEhCA,EAAO,aACLC,KAAM,KAEHD,IAGOE,mBAAmBC,OAC7BH,EAAQE,QAAUF,EAAQE,QAAQE,eAGpC,IAAIC,EAAgBC,mBAAmBnN,GAAQ,IAAMmN,mBAAmBtK,GAExE,IAAK,IAAIuK,KAAaP,EAAS,CAC7BK,GAAiB,KAAOE,EACxB,IAAIC,EAAcR,EAAQO,IACN,IAAhBC,IACFH,GAAiB,IAAMG,GAI3BhJ,SAASsF,OAASuD,GAlClB,EAAK/J,MAAQ,CACTC,SAAQ,GAHF,E,0CAwCd,WACI,OAAGxD,KAAKuD,MAAMC,QACH,cAAC,EAAD,IAEA,cAAC,EAAD,CAAUwI,OAAQhM,KAAKgM,W,+BAItC,WAAqB,IAAD,OAChB,EAA+ChM,KAAKC,MAA/C0H,EAAL,EAAKA,QAAL,IAAcqC,MAAO0D,OAAQ1B,EAA7B,EAA6BA,OAAQjF,EAArC,EAAqCA,KAIrC,GAHA/G,KAAKgM,OAAOA,EAGTjF,EACC/G,KAAKgN,UAAU,OAAQjG,EAAM,CAACmG,KAAK,SAASlB,IAC5CrE,EAAQnF,KAAR,gBAAsBwJ,SAItB,KADAjF,EAAO/G,KAAK6J,UAAU,SAIlB,OAFAhC,MAAM,iCAAiCpD,SAASsF,aAChDpC,EAAQnF,KAAK,KAMrBwE,MAAM,YAAa,CACfC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAK/B,KAAKE,UAAU,CAAClF,KAAK4L,EAAQjF,WACnCK,MAAK,SAAA/E,GACJ,IAAIA,EAAIgF,GAAI,MAAM,IAAIC,MAAM,8BAC5B,OAAOjF,EAAIkF,UACZH,MAAK,SAAAI,GACJ,GAAGA,EAAKC,MAAO,MAAM,IAAIH,MAAM,mBAAqBE,EAAKC,OACzD,GAAGD,EAAKM,UACR,MAAM,IAAIR,MAAJ,sCAAyC0E,EAAzC,MAED,GAAGxE,EAAKO,UACT,MAAM,IAAIT,MAAM,kBAGhB,EAAK/B,SAAU,CAAC/B,SAAQ,OAE7BoE,OAAM,SAAA/E,GACLgF,MAAMhF,GACN8E,EAAQnF,KAAK,Y,GAxFN3C,IAAMC,WA8FVwI,cAAWyE,GCtEXY,E,4JArBb,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOT,KAAM,CAAC,sBAAsB,iBAApC,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOU,OAAK,EAACV,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUjC,GAAG,kB,GAbPpL,IAAMC,WCKT+N,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3G,MAAK,YAAkD,IAA/C4G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9J,SAASC,eAAe,SAM1BmJ,K","file":"static/js/main.7fedacfe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n        <header className='display-6 text-center pt-2 pb-2 ps-5 pe-5'>\r\n          Rock Paper Cutter\r\n        </header>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nclass Hand extends React.Component {\r\n\r\n  render() {\r\n      const {angle,count,name,stat,color}=this.props;\r\n      let h = Number.parseInt(50+100/count)\r\n      const bias = Math.abs(90-angle%180)*.18;\r\n      const choice = ['stone', 'paper', 'scissor']\r\n      const trans = ((window.innerWidth>window.innerHeight)?(8+(16-bias)+'vw'):(8+bias+'vw'));\r\n      const sty = {height:h+'px'}\r\n      if(!(stat.choice>=0)){\r\n        sty['animation']='shiver infinite alternate ease-in-out .1s'\r\n      }\r\n    return (\r\n        <div className='hand' style={{\r\n                transform: `rotateZ(${angle}deg) translateY(calc(40px + ${trans}))`,\r\n                position:'absolute',\r\n                top:`calc(50vh - ${20 + h/2+'px'})`,\r\n                left:`calc(50vw - ${h/2+'px'})`\r\n        }}>\r\n            <div>\r\n                {\r\n                    <img src={(stat.choice>=0)? `/img/${choice[stat.choice]}.png`\r\n                                              : '/img/stone.png'}\r\n                         style={sty}\r\n                         className={color}\r\n                         alt=''\r\n                    />\r\n                }\r\n            </div>\r\n            <div className='name'>\r\n                <div>\r\n                    <span>{name}</span>\r\n                    <span className='badge badge-pill bg-info m-1'>{stat.wins}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Hand;\r\n","import React from 'react';\r\nimport Hand from './Hand.js'\r\n\r\nclass Allhands extends React.Component {\r\n\r\n  render() {\r\n    const {count,players:p, reveal} = this.props;\r\n    let ind=0, hands=[], deg=0;\r\n    if(window.innerWidth>window.innerHeight)\r\n      deg=90\r\n    \r\n    for(let player in p){\r\n      if(p[player].status==='on'){\r\n        let color='transparent';\r\n        if(reveal){\r\n          if(reveal.res==='draw') color='beige'\r\n          else if(reveal.winners.includes(player)) color='lawngreen'\r\n          else color='orangered'\r\n        }\r\n        hands.push( <Hand name={player} \r\n                          stat={p[player]} \r\n                          key={ind++} \r\n                          angle={deg+ind*(360/count)} \r\n                          count={count}\r\n                          color={color}\r\n                    />)\r\n        }\r\n    }\r\n    return hands\r\n  }\r\n}\r\n\r\nexport default Allhands;\r\n","import React from 'react';\r\n\r\nclass Loader extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='divMyloader position-fixed w-100 vh-100 top-0 start-0'>\r\n                <div className='myloader position-absolute top-50 start-50 d-flex translate-middle'>\r\n                    <div>\r\n                        <div className='spinner spinner-grow m-2'></div>\r\n                        <div className='spinner spinner-grow m-2' style={{animationDelay:'.2s'}}></div>\r\n                        <div className='spinner spinner-grow m-2' style={{animationDelay:'.4s'}}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loader\r\n\r\n/* error div\r\n <div className='fs-4 text-light text-center'>\r\n    {this.props.error}\r\n    <br />\r\n    😥\r\n</div> */","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Allhands from './Allhands.js'\r\nimport Loader from './Loader';\r\n\r\nclass Home extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.stop=false\r\n        this.state = {\r\n            loading:false,\r\n            count:3,\r\n            reveal:false,\r\n            players:{\r\n                'ronan':{\r\n                    status:'on',\r\n                    choice:0,\r\n                },\r\n                'salaman':{status:'on'},\r\n                'mariana':{status:'on'},\r\n            }\r\n        };\r\n    }\r\n\r\n    rand(min, max){\r\n        return min + Math.floor(Math.random()*(max-min+1))\r\n    }\r\n\r\n    genName(){\r\n        return String.fromCharCode(\r\n            this.rand(97,97+25),\r\n            [97,101,105,111,117][this.rand(0,3)],\r\n            this.rand(97,97+25),\r\n            [97,101,105,111,117][this.rand(0,3)],\r\n        ) + this.rand(1,99)\r\n    }\r\n\r\n    calResult(players, total){\r\n        const cnt = [0,0,0], res = {}\r\n        for( let p in players){\r\n            if(players[p].status==='on'){\r\n                cnt[players[p].choice]++\r\n            }\r\n        }\r\n        if(cnt[0]*cnt[1]*cnt[2] !== 0 || cnt.includes(total)){\r\n            res.res='draw'\r\n            return res\r\n        }\r\n        else res.res='win'\r\n\r\n        let win=0\r\n        if(cnt[0]===0) win=2\r\n        if(cnt[2]===0) win=1\r\n\r\n        res.winners = []\r\n        for( let p in players){\r\n            if(players[p].status==='on'){\r\n                if(players[p].choice===win)\r\n                    res.winners.push(p)\r\n            }\r\n        }\r\n        const inc = total - res.winners.length\r\n        for(let p of res.winners){\r\n            players[p].wins += inc\r\n        }\r\n\r\n        return res\r\n    }\r\n\r\n    update = e=>{\r\n        let cur=e.target, val = cur.value\r\n        val = val.replaceAll(/[^ \\w-]/g,'').substr(0,16)\r\n        cur.value = val\r\n        cur.classList.remove('is-invalid')\r\n    }\r\n\r\n    async createAni(){\r\n        const txts = [\r\n            'Online multiplayer game',\r\n            'Reach out your hands',\r\n            'Any number of players!',\r\n            'Stone beats scissors',\r\n            'Scissors beats paper',\r\n            'Paper beats stone',\r\n            'Old is gold, never gets old'\r\n        ], names = [ \r\n            'ron', 'luffy', 'kaido', 'Edward', 'thanos', 'enma',\r\n            'mayuri', 'zoro', 'naami', 'brook', 'meliodas', 'asta', 'naruto',\r\n            'hinata', 'sakura', 'levi', 'mikasa', 'kilua', 'Zenitsu',\r\n            'Nezuko', 'platypus', 'Lawliet', 'misa misa', 'Saitama',\r\n        ]\r\n\r\n        const elem = document.getElementById('divtxt')\r\n        while(true){\r\n            for(let txt of txts){\r\n\r\n                // setting reveal=false state\r\n                const count = this.rand(2,8), s=new Set(), players={};\r\n                while(s.size!==count){\r\n                    s.add(this.rand(0,names.length-1))\r\n                }\r\n                Array.from(s).forEach(ind=>{\r\n                    players[names[ind]]={\r\n                        status:'on',\r\n                    }\r\n                })\r\n                let copy = JSON.parse(JSON.stringify(players))\r\n                this.setState( { count, players:copy, reveal:false } )\r\n\r\n                // showing txt\r\n                let dlay = 0\r\n                elem.innerHTML= Array.from(txt).map(v=>{\r\n                    if(v===' ')\r\n                        return `<span style='animation-delay:${(dlay++)/20}s;width:30px;'></span>`\r\n                    return `<span style='animation-delay:${(dlay++)/20}s'>${v}</span>`\r\n                }).join('')\r\n                \r\n                // sleep for 4s\r\n                await new Promise(res=>setTimeout(res,5000,'ok'))\r\n                if(this.stop) return\r\n\r\n                // calculate result\r\n                for(let p in players){\r\n                    players[p].choice = this.rand(0,2)\r\n                }\r\n                const reveal = this.calResult(players, count)\r\n                copy = JSON.parse(JSON.stringify(players))\r\n                this.setState( { reveal, players:copy } )\r\n                \r\n                // sleep again\r\n                await new Promise(res=>setTimeout(res,3000,'ok'))\r\n                if(this.stop) return\r\n                this.setState( { count:0, players:{}, reveal:false } )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='mycontainer'>\r\n                    <div className=''>\r\n                        <div className=\"d-flex flex-column justify-content-center pt-4 h-100\">\r\n                            <div className='m-2 p-2 pb-4 display-3 lead popper' id='divtxt'></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='divAllhandsHome'>\r\n                    <Allhands players={this.state.players} \r\n                            count  ={this.state.count}\r\n                            reveal ={this.state.reveal}\r\n                    />\r\n                </div>\r\n\r\n                <a href='#myform1' className='link position-absolute start-50 bottom-0 translate-middle'>\r\n                    <img src='/img/down.png' id='arrow-link' alt='' />\r\n                </a>\r\n\r\n                <div className='container-fluid w-lg-60 shadow pt-5 pb-5 divform2'>\r\n                    <br />\r\n                    <div className='row gy-4'>\r\n                        <form id='myform1' className='col col-10 col-md-5 p-4 mx-auto mb-4 divform'>\r\n                            <div className='h3 text-center mb-4'>Create room</div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"bname\">Room name</label>\r\n                                <input type=\"name\" className=\"form-control text-primary font-weight-bolder\" id=\"cname\" autoComplete=\"off\" spellCheck=\"false\" required=\"required\" />\r\n                                <div className='invalid-feedback'>Sorry, room with this name already exists.</div>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"bname\">Password</label>\r\n                                <input type=\"name\" className=\"form-control text-primary font-weight-bolder\" id=\"cpass\" autoComplete=\"off\" spellCheck=\"false\" required=\"required\" />\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"container\">\r\n                                <button type=\"submit\" className=\"btn btn-success d-block m-auto\">Lets GO</button>\r\n                            </div>\r\n                        </form>\r\n                        {/* <hr /> */}\r\n                        <form id='myform2' className='col col-10 col-md-5 p-4 mx-auto mb-4 divform'>\r\n                            <div className='h3 text-center mb-4'>Join room</div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"bname\">Room name</label>\r\n                                <input type=\"name\" className=\"form-control text-primary font-weight-bolder\" id=\"jname\" autoComplete=\"off\" spellCheck=\"false\" required=\"required\" />\r\n                                <div className='invalid-feedback'>Room with this name does not exists.</div>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"bname\">Password</label>\r\n                                <input type=\"name\" className=\"form-control text-primary font-weight-bolder\" id=\"jpass\" autoComplete=\"off\" spellCheck=\"false\" required=\"required\" />\r\n                                <div className='invalid-feedback'>Incorrect password</div>\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"container\">\r\n                                <button type=\"submit\" className=\"btn btn-success d-block m-auto\">Lets GO</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className='text-center mb-2'>\r\n                    @copyrights 2021\r\n                </div>\r\n\r\n                {!this.state.loading || <Loader />}\r\n            </>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createAni()\r\n\r\n        const cname = document.getElementById('cname')\r\n        const cpass = document.getElementById('cpass')\r\n        const jname = document.getElementById('jname')\r\n        const jpass = document.getElementById('jpass')\r\n\r\n        cname.value = this.genName()\r\n        cpass.value = this.rand(100,999)\r\n\r\n        cname.addEventListener('input', this.update)\r\n        jname.addEventListener('input', this.update)\r\n        jpass.addEventListener('input', ()=>jpass.classList.remove('is-invalid'))\r\n\r\n        document.getElementById('myform1').addEventListener('submit', e=>{\r\n            e.preventDefault()\r\n            this.setState({loading:true})\r\n            const name=cname.value, pass=cpass.value;\r\n            fetch('/createRoom', {\r\n                method:'POST',\r\n                headers:{'Content-Type': 'application/json'},\r\n                body:JSON.stringify({name, pass})\r\n            }).then(res=>{\r\n                if(!res.ok) throw new Error('Some error occured')\r\n                return res.json()\r\n            }).then(data=>{\r\n                if(data.error) throw new Error('Error occured : ' + data.error)\r\n                if(data.exists){\r\n                    cname.classList.add('is-invalid')\r\n                    this.setState({loading:false})\r\n                }\r\n                else{\r\n                    // setCookie('pass', pass, {path:`/room/${name}`}) \r\n                    // auth is not able to read this cookie!!\r\n                    this.props.history.push(`/room/${name}/${pass}`)\r\n                }\r\n            }).catch(e=>{\r\n                this.setState({loading:false})\r\n                alert(e)\r\n            })\r\n        })\r\n\r\n        document.getElementById('myform2').addEventListener('submit', e=>{\r\n            e.preventDefault()\r\n            this.setState({loading:true})\r\n            const name=jname.value, pass=jpass.value;\r\n            fetch('/joinRoom', {\r\n                method:'POST',\r\n                headers:{'Content-Type': 'application/json'},\r\n                body:JSON.stringify({name, pass})\r\n            }).then(res=>{\r\n                if(!res.ok) throw new Error('Some error occured')\r\n                return res.json()\r\n            }).then(data=>{\r\n                if(data.error) throw new Error('Error occured : ' + data.error) \r\n                if(data.notExists){\r\n                    jname.classList.add('is-invalid')\r\n                    this.setState({loading:false})\r\n                }\r\n                else if(data.wrongPass){\r\n                    jpass.classList.add('is-invalid')\r\n                    this.setState({loading:false})\r\n                }\r\n                else{\r\n                    // setCookie('pass', pass, {path:`/room/${name}`}) \r\n                    // auth is not able to read this cookie!!\r\n                    this.props.history.push(`/room/${name}/${pass}`)\r\n                }\r\n            }).catch(e=>{\r\n                this.setState({loading:false})\r\n                alert(e)\r\n            })\r\n        })\r\n\r\n        this.hidearrow = setInterval(function(){\r\n            const arrow = document.getElementById('arrow-link')\r\n            if(arrow.getBoundingClientRect().y<500){\r\n                arrow.style['animation-name']='none'\r\n            }\r\n            else{\r\n                arrow.style['animation-name']='anilink'\r\n            }\r\n        }, 500)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.stop=true\r\n        clearInterval(this.hidearrow)\r\n    }\r\n}\r\n\r\nexport default withRouter(Home);\r\n","import { Modal } from 'bootstrap';\r\nimport React, { createRef } from 'react';\r\n\r\nclass Popup extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.refinp = createRef();\r\n    }\r\n\r\n    setName = e=>{\r\n        e.preventDefault()\r\n        const val = this.refinp.current.value\r\n        if(this.props.setName(val,this.myModal) === 'exist'){\r\n            this.refinp.current.classList.add('is-invalid')\r\n        }\r\n\r\n    }\r\n    update = e=>{\r\n        let cur=this.refinp.current, val = cur.value\r\n        val = val.replaceAll(/[^ \\w-]/g,'').substr(0,12)\r\n        cur.value = val\r\n        cur.classList.remove('is-invalid')\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <div className='modal' id='modname'>\r\n            <div className='modal-dialog modal-dialog-centered'>\r\n                <div className='modal-content'>\r\n                    <div className='modal-header'>\r\n                        <div className='modal-title text-dark display-4 m-auto'>Enter your name</div>\r\n                    </div>\r\n                    <form className='modal-body d-grid gap-4 justify-content-evenly' id='formname'>\r\n                        <br />\r\n                        <input  type='text' \r\n                                className='form-control form-control-lg text-primary'\r\n                                ref={this.refinp}\r\n                                onInput={this.update}\r\n                                spellCheck='false'\r\n                                placeholder='name'\r\n                                required \r\n                        />\r\n                        <div className='invalid-feedback'>Player with this name already exists.</div>\r\n                        <button className='btn btn-lg btn-primary'>GO</button>\r\n                        <br />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n\r\n    componentDidMount(){\r\n        const frm = document.getElementById('formname')\r\n        frm.onsubmit=this.setName\r\n        this.myModal = new Modal(document.getElementById('modname'),{backdrop:'static',keyboard:false})\r\n        this.myModal.show()\r\n        this.refinp.current.focus()\r\n    }\r\n}\r\n\r\nexport default Popup;\r\n","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='container-fluid position-absolute bottom-0'>\r\n                <div className='container'>\r\n                    <div id='divchoice' className='row footer'>\r\n                        <button className='btn btn-info col-4 border border-success border-2' onClick={e=>this.props.play(0)}>Stone</button>\r\n                        <button className='btn btn-info col-4 border border-success border-2' onClick={e=>this.props.play(1)}>Paper</button>\r\n                        <button className='btn btn-info col-4 border border-success border-2' onClick={e=>this.props.play(2)}>Scissor</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Offcanvas extends React.Component {\r\n\r\n  resetRoom = ()=>{\r\n    this.props.socket.emit('room reset', '')\r\n  }\r\n\r\n  getCookie = name=>{\r\n    let matches = document.cookie.match(new RegExp(\r\n      \"(?:^|; )\" + name.replace(/([.$?*|{}()[\\]\\\\/+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n  }\r\n\r\n  shareRoom = ()=>{\r\n    const url = window.location.origin+'/room/'+this.props.roomName+'/'+this.getCookie('pass');\r\n    if(!navigator.share){\r\n      navigator.share({\r\n        title:'👊✋✌',\r\n        text:'Lets play Rock-paper-cutter, infinity multiplayer online game!',\r\n        url})\r\n    }\r\n    else{\r\n      navigator.clipboard.writeText(url)\r\n      .then(alert('Room link is copied. Share it with others.'))\r\n      .catch(e=>alert(`Error occured while copying room link. \r\nEither you are not on \"https\" or some browser problem.\r\n\r\nRoom link : ${url}`))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n        <>\r\n            <div className=\"offcanvas offcanvas-start\" tabIndex=\"-1\" id=\"divoffcanvas\">\r\n                <div className=\"offcanvas-header\">\r\n                    <Link to='/' className=\"row offcanvas-title text-decoration-none\" id=\"h5offcanvas\">\r\n                        <img className='col-2 rounded-pill iconHome' src='/img/home.svg' alt='home' />\r\n                        <span className='m-auto h3 text-dark col-auto text-center'>Home</span>\r\n                    </Link>\r\n                    <button type=\"button\" className=\"btn-close text-reset col-2\" data-bs-dismiss=\"offcanvas\"></button>\r\n                </div>\r\n\r\n                <div className=\"offcanvas-body container-fluid\">\r\n                  <div className='row h-100'>\r\n\r\n                    <div className='col-12 mb-2 btn-group'>\r\n                      <button type='button' onClick={this.resetRoom} className='btn btn-outline-danger col-6'>\r\n                        Reset Score\r\n                      </button>\r\n                      <button type='button' onClick={this.shareRoom} className='btn btn-outline-success col-6'>\r\n                        Invite\r\n                      </button>\r\n                      \r\n                    </div>\r\n\r\n                    <div className='col-12 d-flex flex-column-reverse' id='divchatbox'>\r\n                      <div>\r\n                        <div className='name'>@Ron</div>\r\n                        <div className='msg'>\r\n                          Thanks for playing..\r\n                          {/* <br />\r\n                          In case of any bug or suggestion open an issue&nbsp; \r\n                          <a href='#'>here</a>. */}\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <form className='input-group col-12' id='frmchat'>\r\n                      <input type=\"text\" className=\"form-control\" id=\"inpchat\" autoComplete=\"off\" spellCheck=\"false\" required=\"required\" />\r\n                      <button className='btn btn-outline-primary'>send</button>\r\n                    </form>\r\n                    \r\n                  </div>\r\n                </div>\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    const inpchat = document.getElementById('inpchat')\r\n    const divchatbox = document.getElementById('divchatbox')\r\n    const spanMsgCnt = document.getElementById('spanMsgCnt')\r\n    const offcan = document.querySelector('.offcanvas')\r\n\r\n    // user sending msg\r\n    document.getElementById('frmchat').addEventListener('submit', e=>{\r\n      e.preventDefault()\r\n      const val = inpchat.value.trim()\r\n      if(val){\r\n        this.props.socket.emit('room msg', val)\r\n        inpchat.value=''\r\n      }\r\n    })\r\n\r\n    // receiving msg\r\n    this.props.socket.on('room msg', (name,val)=>{\r\n      divchatbox.insertAdjacentHTML('afterbegin',\r\n        `\r\n          <div>\r\n            <div class='name'>@${name}</div>\r\n            <div class='msg'>${val}</div>\r\n          </div>\r\n        `\r\n      )\r\n\r\n      // update spanMsgCnt\r\n      if(!offcan.classList.contains('show')){\r\n        spanMsgCnt.innerText = +spanMsgCnt.innerText + 1\r\n      }\r\n    })\r\n\r\n    // player opens menu, so clear Msgcnt\r\n    offcan.addEventListener('shown.bs.offcanvas', function () {\r\n      spanMsgCnt.innerText = '';\r\n      inpchat.focus()\r\n    })\r\n\r\n    // a player resetted room score\r\n    this.props.socket.on('room reset', (name, room)=>{\r\n      divchatbox.insertAdjacentHTML('afterbegin',\r\n        `\r\n          <div>\r\n            <div class='name'>@${name} resetted room</div>\r\n          </div>\r\n        `\r\n      )\r\n    })\r\n  }\r\n}\r\n\r\nexport default Offcanvas;\r\n","import React from 'react';\r\nimport Popup from './Popup.js'\r\nimport Footer from './Footer.js'\r\nimport Allhands from './Allhands.js'\r\nimport Offcanvas from './Offcanvas'\r\n\r\nclass Main extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      ...this.props.room,\r\n      name:''\r\n    }\r\n    this.reveal=false\r\n  }\r\n\r\n  setName = (name,myModal)=>{\r\n    if(name==='') return\r\n    if(this.state.players[name] && this.state.players[name].status==='on')\r\n      return 'exist'\r\n    // tell server to add new player\r\n    myModal.hide()\r\n    this.socket.emit('room add', this.props.roomid, name, ac=>{\r\n      if(ac==='ok'){\r\n        this.setState({name})\r\n      }\r\n      else console.log('error ', 'ac not ok in setname')\r\n    })\r\n    \r\n  }\r\n\r\n  notify = msg=>{\r\n    alert(msg)\r\n  }\r\n\r\n  play = v=>{\r\n    // tell server you played your turn\r\n    this.socket.emit('room play', v)\r\n    // update state only if acknowledgement received\r\n    this.setState(s=>{\r\n      const clone = JSON.parse(JSON.stringify(s.players))\r\n      clone[s.name].choice = v\r\n      return {\r\n        players: clone\r\n      }\r\n    })\r\n  }\r\n\r\n  render(){\r\n    if(this.state.name===''){\r\n      return (\r\n        <>\r\n          <Popup setName={this.setName} />\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <button className=\"iconMenu btn btn-outline-primary position-absolute top-0 start-0 m-1 ms-1\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#divoffcanvas\">\r\n          <span>|||</span>\r\n          <span id='spanMsgCnt'></span>\r\n        </button>\r\n        \r\n        <Allhands players={this.state.players} \r\n                  count  ={this.state.count}\r\n                  reveal ={this.reveal}\r\n        />\r\n        {(this.state.players[this.state.name].choice>=0) || <Footer play={this.play} />}\r\n\r\n        <Offcanvas roomName={this.state.name} socket={this.props.socket} />\r\n      </>\r\n    )\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.socket = this.props.socket\r\n\r\n    // when a player plays his turn\r\n    this.socket.on('room play', (name, value)=>{\r\n      this.setState(s=>{\r\n        const players = JSON.parse(JSON.stringify(s.players))\r\n        players[name].choice = value\r\n        return {players}\r\n      })\r\n      // if(this.state.played === this.state.count){\r\n      //   // all players played their turn\r\n      //   console.log('who win?')\r\n      // }\r\n    })\r\n\r\n    // when a new player enters\r\n    this.socket.on('room add', (room)=>{\r\n      room.name=this.state.name\r\n      this.setState(room)\r\n    })\r\n    \r\n    // a player left room\r\n    this.socket.on('room delete', (room)=>{\r\n      room.name=this.state.name\r\n      this.setState(room)\r\n    })\r\n\r\n    // its time to see who win!\r\n    this.socket.on('room reveal', (res, room)=>{\r\n      room.name=this.state.name\r\n      this.reveal=res\r\n      this.setState(room)\r\n\r\n      // reset room after 4 seconds\r\n      setTimeout(()=>{\r\n        this.reveal=false\r\n        this.setState(s=>{\r\n          const players = JSON.parse(JSON.stringify(s.players))\r\n          for(let p in players){\r\n            delete players[p].choice\r\n          }\r\n          return {players}\r\n        })\r\n      }, 2000 )\r\n    })\r\n\r\n    // a player resetted room score\r\n    this.props.socket.on('room reset', (name, room)=>{\r\n      room.name=this.state.name\r\n      this.setState(room)\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport default Main;","import React from 'react'\r\nimport Main from './Main.js'\r\nimport Loader from './Loader.js'\r\nimport {io} from 'socket.io-client'\r\n\r\nclass LoadMain extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  getRoom = ()=>{\r\n    this.socket = io()\r\n    this.socket.emit('get room', this.props.roomid, room=>{\r\n      this.room = room\r\n      this.setState({loading:false})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        this.state.loading?\r\n            <Loader />\r\n        :   <Main socket={this.socket} \r\n                  room={this.room} \r\n                  roomid={this.props.roomid} \r\n            /> \r\n    )\r\n  }\r\n\r\n  componentDidMount(){\r\n    // preloading images\r\n    new Image().src = '/img/home.svg'\r\n    new Image().src = '/img/stone.png'\r\n    new Image().src = '/img/paper.png'\r\n    const img = new Image()\r\n\r\n    // get room from server with all players info\r\n    img.addEventListener('load', this.getRoom )\r\n    img.src = '/img/scissor.png'\r\n  }\r\n\r\n  componentWillUnmount(){\r\n      this.socket.close()\r\n  }\r\n}\r\n\r\nexport default LoadMain;\r\n","import React from 'react';\r\nimport Loader from './Loader';\r\nimport LoadMain from './LoadMain.js'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Auth extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loading:true\r\n        };\r\n    }\r\n\r\n    getCookie = name=>{\r\n        let matches = document.cookie.match(new RegExp(\r\n          \"(?:^|; )\" + name.replace(/([.$?*|{}()[\\]\\\\/+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n    }\r\n\r\n    setCookie = (name, value, options = {})=> {\r\n\r\n        options = {\r\n          path: '/',\r\n          // add other defaults here if necessary\r\n          ...options\r\n        };\r\n      \r\n        if (options.expires instanceof Date) {\r\n          options.expires = options.expires.toUTCString();\r\n        }\r\n      \r\n        let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\r\n      \r\n        for (let optionKey in options) {\r\n          updatedCookie += \"; \" + optionKey;\r\n          let optionValue = options[optionKey];\r\n          if (optionValue !== true) {\r\n            updatedCookie += \"=\" + optionValue;\r\n          }\r\n        }\r\n      \r\n        document.cookie = updatedCookie;\r\n    }\r\n      \r\n      \r\n    render() {\r\n        if(this.state.loading)\r\n            return <Loader />\r\n        else{\r\n            return <LoadMain roomid={this.roomid} />\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {history, match:{params:{roomid, pass}}} = this.props\r\n        this.roomid=roomid\r\n\r\n        // check if password is in url or cookie\r\n        if(pass){\r\n            this.setCookie('pass', pass, {path:'/room/'+roomid})\r\n            history.push(`/room/${roomid}`)\r\n        }\r\n        else{\r\n            pass = this.getCookie('pass')\r\n            if(!pass){\r\n                alert(\"You didn't entered password : \"+document.cookie)\r\n                history.push('/')\r\n                return\r\n            }\r\n        }\r\n\r\n        // request server to add you to the room\r\n        fetch('/joinRoom', {\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({name:roomid, pass})\r\n        }).then(res=>{\r\n            if(!res.ok) throw new Error('Error occured at checkpass')\r\n            return res.json()\r\n        }).then(data=>{\r\n            if(data.error) throw new Error('Error occured : ' + data.error)\r\n            if(data.notExists){\r\n            throw new Error(`No room exists with name - \"${roomid}\"`)\r\n            }\r\n            else if(data.wrongPass){\r\n                throw new Error('Wrong password')\r\n            }\r\n            else{\r\n                this.setState( {loading:false} );\r\n            }\r\n        }).catch(e=>{\r\n            alert(e)\r\n            history.push('/')\r\n        })\r\n        \r\n  }\r\n}\r\n\r\nexport default withRouter(Auth);\r\n","import './App.css';\nimport React from 'react';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\nimport Header from './components/Header.js'\nimport Home from './components/Home.js'\nimport Auth from './components/Auth.js'\n\nclass App extends React.Component{\n  render(){\n    return (\n      <>\n        <Header />\n        <Router>\n          <Switch>\n            <Route path={['/room/:roomid/:pass','/room/:roomid']}>\n              <Auth />\n            </Route>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Redirect to='/' />\n          </Switch>\n        </Router>\n      </>\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}